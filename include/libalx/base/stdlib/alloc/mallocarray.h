/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/base/stdlib/alloc/mallocarray.h */


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <errno.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
/* Rename without alx_ prefix */
#if defined(ALX_NO_PREFIX)
#define mallocarray(ptr, nmemb)		alx_mallocarray(ptr, nmemb)
#endif


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* function prototypes **************************************************
 ******************************************************************************/
__attribute__((malloc))
inline
void	*alx_mallocarray(ptrdiff_t nmemb, size_t size);


/******************************************************************************
 ******* inline functions *****************************************************
 ******************************************************************************/
inline
void	*alx_mallocarray(ptrdiff_t nmemb, size_t size)
{

	if (nmemb < 0)
		goto ovf;
	if ((size_t)nmemb > (SIZE_MAX / size))
		goto ovf;

	return	malloc(size * (size_t)nmemb);
ovf:
	errno	= ENOMEM;
	return	NULL;
}


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
