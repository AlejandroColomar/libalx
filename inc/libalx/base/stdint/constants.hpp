/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#ifndef ALX_BASE_STDINT_CONSTANTS_HPP
#define ALX_BASE_STDINT_CONSTANTS_HPP


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <cstdint>


/******************************************************************************
 ******* typedefs *************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
#define SQRT_UINT8_MIN		(UINT8_C( 0xF))
#define SQRT_INT8_MIN		( INT8_C( 0xB))

#define SQRT_UINT16_MIN		(UINT16_C(0xFF))
#define SQRT_INT16_MIN		( INT16_C(0xB5))

#define SQRT_UINT32_MIN		(UINT32_C(0xFFFF))
#define SQRT_INT32_MIN		( INT32_C(0xB504))

#define SQRT_UINT64_MIN		(UINT64_C(0xFFFFFFFF))
#define SQRT_INT64_MIN		( INT64_C(0xB504F333))

/* Caution with these.  Especially with SQRT_INT128_MIN, which is unsigned */
#define SQRT_UINT128_MIN	(UINT64_C(0xFFFFFFFFFFFFFFFF))
#define SQRT_INT128_MIN		(UINT64_C(0xB504F333F9DE6800))


/******************************************************************************
 ******* enums ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* structs / unions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* variables ************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* extern functions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static inline functions (prototypes) *********************************
 ******************************************************************************/


/******************************************************************************
 ******* static inline functions (definitions) ********************************
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#endif		/* libalx/base/stdint/constants.hpp */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
