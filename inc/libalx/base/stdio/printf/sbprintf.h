/******************************************************************************
 *	Copyright (C) 2017	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#ifndef ALX_STDIO_PRINTF_SBPRINTF_H
#define ALX_STDIO_PRINTF_SBPRINTF_H


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <errno.h>
#include <stdio.h>

#include "libalx/base/assert/assert.h"


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
/*
 * int	alx_sbprintf(char buff[restrict], int *restrict written,
 *				const char *restrict format, ...);
 */
#define alx_sbprintf(buff, written, format, ...)	(		\
{									\
	__auto_type	w_	= (written);				\
	int		len_;						\
	int		err_;						\
									\
	alx_static_assert_array(buff);					\
	err_	= 0;							\
									\
	len_	= snprintf(buff, sizeof(buff), format, ##__VA_ARGS__);	\
	if (w_ != NULL)							\
		*w_ = len_;						\
									\
	if (len_ < 0) {							\
		err_	= -errno;					\
		goto ret_;						\
	}								\
	if ((unsigned)len_ >= sizeof(buff)) {				\
		if (w_ != NULL)						\
			*w_ = sizeof(buff) - 1;				\
		errno	= ENOMEM;					\
		err_	= ENOMEM;					\
		goto ret_;						\
	}								\
ret_:									\
	err_;								\
}									\
)


/******************************************************************************
 ******* enums ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* structs / unions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* variables ************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* extern functions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static inline functions (prototypes) *********************************
 ******************************************************************************/


/******************************************************************************
 ******* static inline functions (definitions) ********************************
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#endif		/* libalx/base/stdio/printf/sbprintf.h */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
