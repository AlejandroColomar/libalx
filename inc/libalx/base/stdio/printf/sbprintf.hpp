/******************************************************************************
 *	Copyright (C) 2017	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#ifndef ALX_STDIO_PRINTF_SBPRINTF_HPP
#define ALX_STDIO_PRINTF_SBPRINTF_HPP


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include "libalx/base/assert/assert.hpp"
#include "libalx/base/stdio/printf/swnprintf.hpp"


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
namespace alx {


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
/*
 * int	alx_sbprintf(char buff[restrict], int *restrict written,
 *				const char *restrict fmt, ...);
 */
#define alx_sbprintf(buff, written, fmt, ...)	(			\
{									\
									\
	alx_static_assert_char_array(buff);				\
	alx::swnprintf(buff, written, sizeof(buff), fmt, ##__VA_ARGS__);\
}									\
)


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* variables ************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* extern functions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* template (declarations) **********************************************
 ******************************************************************************/


/******************************************************************************
 ******* static inline functions (prototypes) *********************************
 ******************************************************************************/


/******************************************************************************
 ******* static inline functions (definitions) ********************************
 ******************************************************************************/


/******************************************************************************
 ******* template (definitions) ***********************************************
 ******************************************************************************/


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
}


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#endif		/* libalx/base/stdio/printf/sbprintf.hpp */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
