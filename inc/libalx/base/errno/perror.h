/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/base/errno/perror.h */


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <errno.h>
#include <stdio.h>
#include <string.h>


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
#define alx_perror(str)	do						\
{									\
	alx_perror__(__FILE__, __LINE__, __func__, str);		\
} while (0)


/******************************************************************************
 ******* enums ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* structs / unions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* variables ************************************************************
 ******************************************************************************/
extern	char	*__progname;


/******************************************************************************
 ******* function prototypes **************************************************
 ******************************************************************************/
inline
void	alx_perror__	(const char *restrict file, int line,
			 const char *restrict func, const char *restrict str)
	__attribute__((nonnull(1, 3)));


/******************************************************************************
 ******* inline functions *****************************************************
 ******************************************************************************/
inline
void	alx_perror__(const char *restrict file, int line,
		     const char *restrict func, const char *restrict str)
{

	fprintf(stderr, "%s:\n", __progname);
	fprintf(stderr, "%s:%i:\n", file, line);
	fprintf(stderr, "%s():\n", func);
	if (str)
		fprintf(stderr, "	%s\n", str);
	fprintf(stderr, "E%i -	%s\n", errno, strerror(errno));
}


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
