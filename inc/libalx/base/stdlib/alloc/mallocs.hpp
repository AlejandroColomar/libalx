/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#ifndef ALX_STDLIB_ALLOC_MALLOCS_HPP
#define ALX_STDLIB_ALLOC_MALLOCS_HPP


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <cstddef>


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
/*
 * int	alx_mallocs(type **restrict p, ptrdiff_t nmemb)
 * __attribute__((nonnull));
 */
#define alx_mallocs(ptr, nmemb)	(					\
{									\
	auto	ptr_	= (ptr);					\
									\
	*ptr_	= alx_mallocs__(nmemb, sizeof(**ptr_));			\
									\
	!(*ptr_);							\
}									\
)


/******************************************************************************
 ******* extern "C" ***********************************************************
 ******************************************************************************/
extern	"C"
{
void	*alx_mallocs__(ptrdiff_t nmemb, size_t size)
__attribute__((malloc));
}


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
namespace alx {


/******************************************************************************
 ******* enums ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* structs / unions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* variables ************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* extern functions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
}	/* namespace alx */


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#endif		/* libalx/base/stdlib/alloc/mallocs.hpp */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
