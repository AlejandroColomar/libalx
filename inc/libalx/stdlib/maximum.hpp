/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#ifndef ALX_STDLIB_MAXIMUM_HPP
#define ALX_STDLIB_MAXIMUM_HPP


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <cstddef>
#include <cstdint>


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
#define	MAX(a, b) (							\
{									\
	auto	_a	= (a);						\
	auto	_b	= (b);						\
									\
	(_a > _b) ? _a : _b;						\
}									\
)


/******************************************************************************
 ******* enums ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* structs / unions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* variables ************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* extern functions *****************************************************
 ******************************************************************************/
extern	"C"
{
ptrdiff_t	alx_maximum_ldbl	(ptrdiff_t nmemb,
					const long double arr[restrict]);
ptrdiff_t	alx_maximum		(ptrdiff_t nmemb,
					const double arr[restrict]);
ptrdiff_t	alx_maximum_f		(ptrdiff_t nmemb,
					const float arr[restrict]);
ptrdiff_t	alx_maximum_uint	(ptrdiff_t nmemb,
					const unsigned arr[restrict]);
ptrdiff_t	alx_maximum_int		(ptrdiff_t nmemb,
					const int arr[restrict]);
ptrdiff_t	alx_maximum_u8		(ptrdiff_t nmemb,
					const uint8_t arr[restrict]);
ptrdiff_t	alx_maximum_s8		(ptrdiff_t nmemb,
					const int8_t arr[restrict]);
ptrdiff_t	alx_maximum_u16		(ptrdiff_t nmemb,
					const uint16_t arr[restrict]);
ptrdiff_t	alx_maximum_s16		(ptrdiff_t nmemb,
					const int16_t arr[restrict]);
ptrdiff_t	alx_maximum_u32		(ptrdiff_t nmemb,
					const uint32_t arr[restrict]);
ptrdiff_t	alx_maximum_s32		(ptrdiff_t nmemb,
					const int32_t arr[restrict]);
ptrdiff_t	alx_maximum_u64		(ptrdiff_t nmemb,
					const uint64_t arr[restrict]);
ptrdiff_t	alx_maximum_s64		(ptrdiff_t nmemb,
					const int64_t arr[restrict]);
ptrdiff_t	alx_maximum_pdif	(ptrdiff_t nmemb,
					const ptrdiff_t arr[restrict]);
}


/******************************************************************************
 ******* static inline functions (prototypes) *********************************
 ******************************************************************************/


/******************************************************************************
 ******* static inline functions (definitions) ********************************
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#endif		/* libalx/stdlib/maximum.hpp */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
